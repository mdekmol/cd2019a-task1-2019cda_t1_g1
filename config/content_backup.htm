<h1>簡介</h1>
<p><a href="https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g1">產品協同設計課程第一組</a></p>
<p><a href="https://cda-t1-g1.blogspot.com/">部落格</a></p>
<h1>組員</h1>
<p><a href="https://github.com/40623101">40623101</a> 王馨慧</p>
<p><a href="https://github.com/40623108">40623108</a> 林郁涵</p>
<p><a href="https://github.com/40623116">40623116</a> 楊子毅</p>
<p><a href="https://github.com/40623117">40623117</a> 楊智傑</p>
<p><a href="https://github.com/40623119">40623119</a> 歐宗韋</p>
<p><a href="https://github.com/40623122">40623122</a> 蔡柄澤</p>
<p><a href="https://github.com/40623129">40623129</a> 陳威誠</p>
<p><a href="https://github.com/40623140">40623140</a> 韓希然</p>
<p><a href="https://github.com/40423157">40423157</a> 朱明棈</p>
<p>40623158</p>
<h1>課程內容</h1>
<p><span>使用可攜程式系統, 以及 </span><a href="https://github.com/chiamingyen/cmsimfly">CMSimfly</a><span><span> </span>與</span><a href="https://git-scm.com/download/win"><span> </span>portable Git</a><span><span> </span>管理各學員與分組的動態與靜態網際內容管理系統, 同時利用<span> </span></span><a href="https://www.onshape.com/">Onshape</a><span><span> </span>與<span> </span></span><a href="http://www.coppeliarobotics.com/">V-rep</a><span><span> </span>執行機電資整合產品開發, 當面臨各協同設計階段所遭遇問題時, 各學員可利用客製化程式加以解決.</span></p>
<p><span></span></p>
<p><span></span></p>
<p><a href="http://mde.tw/cd2019/content/Introduction.html"><span>from </span>2019 Spring 協同產品設計實習</a></p>
<p></p>
<h2>建立可攜系統</h2>
<p>課程影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/uEq_GtkkPx8" width="560"></iframe> </p>
<p>操作影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/hniWlQ0ib10" width="560"></iframe></p>
<h2>ungit-建立</h2>
<p>1.進入網址 : <a href="http://mde.tw/wcm2019/content/實習項目二.html">http://mde.tw/wcm2019/content/實習項目二.html</a> ，下載 <a href="https://drive.google.com/file/d/1G3cEZsw6d7NjqLLgu9jljVNBd6wF-ZrG/view">nodejs_with_ungit.7z</a> 。</p>
<p><img alt="" height="877" src="/images/download_nodejs.jpg" width="931"/></p>
<p>2.將解壓縮完的整個 <span>nodejs 資料夾放入可攜 data 資料夾中。<img alt="" height="808" src="/images/Y_nodejs.jpg" width="671"/></span></p>
<p>3.以 <span>SciTE 編輯器編輯 start_cadlab.bat。</span></p>
<p><span><img alt="" height="990" src="/images/start_bat.jpg" width="562"/></span></p>
<p>*並且要在path那行增加一個路徑，如下圖</p>
<p><img alt="" height="642" src="/images/未命名.png" width="1196"/></p>
<p>4.在 <span>SciTE 編輯器上輸入指令，指令如下 :</span></p>
<p><span>ungit --launchBrowser=0 --launchCommand "C:\PROGRA~2\Google\Chrome\Application\chrome.exe  %%U"</span></p>
<p><span>如下圖</span></p>
<p><span><img alt="" height="1040" src="/images/Sc1_fsB89RAG6l.png" width="1920"/></span>5.將上述指令存入 Y:\kungit.bat 批次檔案中。</p>
<p><span><img alt="" height="533" src="/images/kungit_save.jpg" width="944"/></span></p>
<p>6. 進入倉儲的資料夾後，<span>只要輸入 kungit 即可呼叫此一 ungit 指令執行。如下圖</span></p>
<p><span><img alt="" height="648" src="/images/未命名-2.png" width="1200"/></span></p>
<h3>更改帳號</h3>
<p>進入<span> home_cadlab 找到 .gitconfig 這個檔案</span></p>
<p><span><img alt="" height="596" src="/images/Folder.png" width="846"/></span></p>
<p><span>以 <span>SciTE 編輯器編輯 .gitconfig<br/>更改裡面的 name 與 email 並儲存<br/></span></span></p>
<p><span><span><img alt="" height="740" src="/images/gitconfig.png" width="576"/></span></span></p>
<p><span><span></span></span></p>
<h3>ungit上推問題與解決</h3>
<p>ungit無法確認身分，導致無法推送</p>
<p><img alt="" height="385" src="/images/fail.png" width="800"/></p>
<p><span>以 </span><span>SciTE 編輯器編輯 start_cadlab.bat<br/>把最後的 home 更改成 home_cadlab ，因為帳號在 home_cadlab 這個資料夾裡面</span></p>
<p><span><img alt="" height="740" src="/images/change.png" width="576"/></span></p>
<p><span></span>更改並儲存之後點擊 stop.bat 關閉，並重新打開，就可以正常上推資料了</p>
<p><img alt="" height="385" src="/images/solved.png" width="800"/></p>
<h3>ungit上傳資料</h3>
<p>點擊上方create an empty commit 即可創立新的commit</p>
<p><img alt="" height="937" src="/images/chrome_JU9YRI40Jr.png" width="1920"/></p>
<p>輸入標題及內容即可上傳</p>
<p><img alt="" height="937" src="/images/1.png" width="1920"/></p>
<p>commit完成後點擊白色的gh-pages再點擊push就上推完成</p>
<p><img alt="" height="937" src="/images/2.png" width="1920"/></p>
<p>若要刪除commit，點擊藍色圓圈，點擊uncommit即可</p>
<p><img alt="" height="937" src="/images/3.png" width="1920"/></p>
<p></p>
<h2>SSH Public Key</h2>
<p><span>(一)關閉操作系統儲存 Github 帳號密碼設定</span></p>
<p><span>1.使用指令「</span>git config --edit --system」，<span>帶出 vi 編輯器。</span></p>
<p><span>2.編輯 git 指令所使用的系統設定(按鍵H,J,K,L對應控制左下上右)。</span></p>
<p><span>3.按a進入編輯模式，</span>編輯模式最底下會顯示「-- INSERT --<span>」。</span></p>
<p><span><img alt="" height="770" src="/images/cmd_EDIT_INSERT.png" width="822"/></span></p>
<p><span>4.按BACKSPACE刪除最後一行如下圖。</span></p>
<p><span><img alt="" height="770" src="/images/cmd_EDIT_INSERT_2.jpg" width="822"/></span></p>
<p><span>5.刪除完按ESC鍵離開編輯模式。<br/></span></p>
<p><span>6.輸入「:wq」存檔並關閉。</span></p>
<p><span><img alt="" height="770" src="/images/cmd_EDIT_wq.png" width="822"/></span></p>
<p><span>(二)建立 OpenSSH 格式的 Private 與 Public Keys</span></p>
<p><span>1.在<span>可攜系統的命令列視窗輸入「sh_yen」，執行 Git 的 shell。<img alt="" height="512" src="/images/SSH_sh_yen.jpg" width="979"/></span></span></p>
<p><span></span>2.<span>使用「</span><span>ssh-keygen -t rsa -b 4096 -C "This is my key"」。</span></p>
<p><span><img alt="" height="512" src="/images/SSH_KEY.jpg" width="979"/></span></p>
<p><span>3.會在y:\home\.ssh\id_rsa與id_rsa.pub建立Private 與 Public 金鑰。(在home裡出現ssh的資料夾)</span><span><img alt="" height="500" src="/images/explorer_2019-03-26_23-31-23.png" width="1208"/></span>4.將 .ssh資料夾裡的id_rsa.pub 的內容轉貼白色視窗裡</p>
<p><img alt="" height="500" src="/images/explorer_2019-03-26_23-31-31.png" width="1208"/></p>
<p><img alt="" height="1030" src="/images/Sc1_2019-03-26_23-31-48.png" width="1920"/></p>
<p>5.到github點選帳號下的settings再點選new ssh key</p>
<p><img alt="" height="778" src="/images/未命名et34.png" width="1644"/></p>
<p>6.並將白色內容複製到 Github 帳號 settings 中 SSH and GPG keys 項目內的 SSH Public Key 區再點選Add ssh key就完成了。</p>
<p></p>
<p><img alt="" height="903" src="/images/chrome_2019-03-26_23-42-23.png" width="1920"/></p>
<p><img alt="" height="903" src="/images/chrome_2019-03-26_23-42-23.png" width="1920"/></p>
<h1>V-rep</h1>
<p></p>
<p><img caption="false" height="393" src="/images/BubbleRobModel.gif" width="800"/></p>
<h2>模擬影片</h2>
<p>40423157</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Pw9ZdlzlQVQ" width="560"></iframe></p>
<h2>手足球圖檔</h2>
<p><a href="https://cad.onshape.com/documents/4379b59c90b3aa52cab774e7/w/8754f7b90eaf9e4f33731814/e/6a15cd0263ff93507865b712">https://cad.onshape.com/documents/4379b59c90b3aa52cab774e7/w/8754f7b90eaf9e4f33731814/e/6a15cd0263ff93507865b712</a></p>
<p><a href="https://cad.onshape.com/documents/fa20c2ed0e7a922412361593/w/8ebdbec3f31dbeae5cebbfd1/e/9806c49758c669a114e1d9b7">https://cad.onshape.com/documents/fa20c2ed0e7a922412361593/w/8ebdbec3f31dbeae5cebbfd1/e/9806c49758c669a114e1d9b7</a></p>
<p><a href="https://cad.onshape.com/documents/3dc0d778d1aef1fcb2350f0e/w/333f4f1feb8012c770139991/e/66bb98a3a7f247e71feb123e">https://cad.onshape.com/documents/3dc0d778d1aef1fcb2350f0e/w/333f4f1feb8012c770139991/e/66bb98a3a7f247e71feb123e</a></p>
<p><a href="https://cad.onshape.com/documents/2d4e6f40d5c6e87b037075c2/w/935f73e23815e2819ea12f5e/e/b85b0468a4fe08cefcb12774">https://cad.onshape.com/documents/2d4e6f40d5c6e87b037075c2/w/935f73e23815e2819ea12f5e/e/b85b0468a4fe08cefcb12774</a></p>
<h2>bobbleRob製作</h2>
<p><span>1. 創建 [Menu bar --&gt; Add --&gt; Primitive shape --&gt; Sphere] 新增直徑為  0.2 m 的球體，雙擊球體，打開編輯視窗，將<strong>Collidable,</strong><span><span> </span></span><strong>Measurable,</strong><span><span> </span></span><strong>Renderable</strong><span><span> </span>and<span> </span></span><strong>Detectable<span> </span></strong><span>選項勾選</span></span></p>
<p><span><img alt="" height="296" src="/images/Sphere.png" width="396"/></span></p>
<p><span><img alt="" height="615" src="/images/cc.png" width="396"/></span></p>
<p><span>2. 點選球體，移動球體位置，到<strong>translation</strong><span>，在Z軸上打上 0.02，</span><strong>Relative to </strong><span>在</span><strong>World<span> </span></strong><span>後，點</span><strong>Translate selection</strong><span>，球體就會往上到適合的位置</span></span></p>
<p><span><span><img alt="" height="382" src="/images/up.png" width="800"/></span></span></p>
<p><span><span>3. [Menu bar --&gt; Add --&gt; Proximity sensor --&gt; Cone type] 新增距離感測器，在旋轉視窗，在Y.Z軸打上90度，再來在位置視窗，在X及Z軸輸入0.1及0.12將感測器對準球體中心</span></span></p>
<p><span><span><img alt="" height="382" src="/images/add.png" width="800"/></span></span></p>
<p><span><span><img alt="" height="382" src="/images/position.png" width="800"/></span></span></p>
<p><span><span><img alt="" height="382" src="/images/Rotate.png" width="800"/></span></span></p>
<p><span><span>4. </span></span>雙擊感測器進入編輯視窗，點擊<strong>Show volume parameter</strong>按鈕，輸入:  <strong>Offset</strong><span> </span>: 0.005   <strong>Angle</strong><span> </span>: 30    <strong>Range</strong><span> </span>: 0.15   點擊<strong>Show detection parameters</strong>，取消<strong>Don't allow detections if distance smaller than</strong></p>
<p><strong><img alt="" height="382" src="/images/allow.png" width="800"/></strong></p>
<p><strong>5.<span> [Menu bar --&gt; Add --&gt; Primitive shape --&gt; cylinder]  </span><span>新增一個（0.08,0.08,0.02）的圓柱體當作輪子，點選圓柱將<strong>Collidable,</strong><span><span> </span></span><strong>Measurable,</strong><span><span> </span></span><strong>Renderable</strong><span><span> </span>and<span> </span></span><strong>Detectable<span> </span></strong><span>選項勾選</span>，之後更改<strong>絕對位置</strong><span>及</span><strong>絕對方向 ( 0.05 , 0.1  ,0.04 )</strong><span>，更改完複製一個將絕對位置Y座標設 -0.1，再來做馬達 [Menu bar --&gt; Add --&gt; Joint --&gt; Revolute]，選擇的馬達再案shift鍵選擇左輪，在位置視窗點 <strong>Apply to selection </strong><span>，在旋轉視窗點 </span><strong>Apply to selection ，</strong><span>右輪也照著上一個步驟</span></span></span></strong></p>
<p><strong><span><span><span><img alt="" height="382" src="/images/rr.png" width="800"/></span></span></span></strong></p>
<p><strong><span><span><span>6. 新增一個直徑0.05的球，讓它有 <strong>Collidable，Measurable，Renderable和Detectable </strong><span>，[Menu bar --&gt; Add --&gt; Force sensor] 增加一個力傳感器並向上移動0.05，與球連接起來，並沿X軸移動 -0.07連接本體</span></span></span></span></strong></p>
<p><strong><span><span><span><span><img alt="" height="382" src="/images/sh.png" width="800"/></span></span></span></span></strong></p>
<p><strong><span><span><span><span>7.  [Menu bar --&gt; Tools --&gt; Collections] ，點<strong>Add new collection </strong><span>，選擇新的集合項目為bubbleRob，點<span>選</span></span><strong>Add </strong><span>，並改名為 </span><strong>bubbleRob_collection</strong></span></span></span></span></strong></p>
<p><strong><span><span><span><span><strong><img alt="" height="663" src="/images/cll.png" width="396"/></strong></span></span></span></span></strong></p>
<p><strong><span><span><span><span><strong>8. [Menu bar --&gt; Tools --&gt; Calculation module properties]，點<strong>Add new distance object</strong><span>，選擇新的集合項目</span><strong>bubbleRob_collection</strong><span>，重命名為</span><strong>bubbleRob_distance</strong></strong></span></span></span></span></strong></p>
<p><strong><span><span><span><span><strong><img alt="" height="467" src="/images/Collections.png" width="396"/></strong></span></span></span></span></strong></p>
<p><strong><span><span><span><span><strong>9. [Menu bar --&gt; Add --&gt; Graph]<span>，</span></strong></span></span></span></span></strong>改名為<strong><span><span><span><span><strong><span> "</span><strong><em>bubbleRob_graph</em></strong><span>"，將graph拉到</span><em>bubbleRob</em><span>底下並設定graph的位置再 ( 0，0，0.005 )，點</span></strong></span></span></span></span></strong><span>擊 <strong><em>bubbleRob_graph</em></strong>，取消 "<strong>Display XYZ-planes</strong>"然後點 <strong>Add new data stream to record  ， </strong></span><span><span><span><strong>Data stream type  : <span> </span></strong>absolute x-position     </span></span></span><span><span><span><strong><strong>Object / item to record</strong>  :  </strong><em>bubbleRob_graph，Y</em>與 Z做法一樣，</span></span></span></p>
<p><span><span><span><em><img alt="" height="649" src="/images/po.png" width="396"/></em></span></span></span></p>
<p>10. <span>點 <strong>Edit 3D curves，再點</strong> <strong>Add new curve</strong>，在對話框哩，如下設定 : <br/></span></p>
<p><span><span><span> <strong>X-value :<span> </span></strong><em>bubbleRob_x_pos</em><strong><br/></strong></span></span></span></p>
<p><span><span><span><strong>Y-value : </strong><em>bubbleRob_y_pos</em><strong><span> </span></strong><br/></span></span></span></p>
<p><span><span><span><strong>Z-value : <span> </span></strong><em>bubbleRob_z_pos</em><span> </span></span></span></span></p>
<p><span><span><span>點選下面的<strong><span> </span>Relative to world</strong><span> 並</span>設定<span> </span><strong>Curve width</strong><span> </span>為 4</span></span></span></p>
<p><span><span><span>11.  <strong>[Menu bar --&gt; Add --&gt; Vision sensor --&gt; Perspective type] </strong><span>打開  </span><strong>vision sensor<span> </span></strong><span>，將</span><span>position and orientation 設置為 (0,0,0)，將 <strong>Far clipping plane </strong>設為1，<strong>Resolution X / Y </strong>設為 256 / 256 ，再來選擇 <strong>Show filter dialog</strong><span>，點  </span><strong>Edge detection on work image 再來</strong><span>點 </span><strong>Add filter </strong><span>來新增，並按旁邊向上的箭頭使它到中間，然後雙擊改 </span><strong>Threshold = 0.2</strong></span></span></span></span></p>
<p><span><span><span><span><img alt="" height="546" src="/images/256.png" width="396"/></span></span></span></span></p>
<p><span><span><span><span>12. 在<strong> </strong><span><strong>scene</strong><span> </span>上 右鍵<span> </span><strong>add floating view</strong><span> </span>，然後在浮動視窗上面 選 view &gt; Associate view with selected vision sensor<span> ，並小腳本圖標，複製以下代碼貼到腳本</span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><img alt="" height="426" src="/images/vrep_NWH4Io47HF.png" width="800"/></span></span></span></span></span></span></p>
<p><span><span><span><span><span><span><img alt="" height="426" src="/images/vrep_NWH4Io47HF.png" width="800"/></span></span></span></span></span></span></p><h1>個人操作影片</h1>
<p>40623119</p>
<p><span>可攜系統</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/P32dakHkfbA" width="560"></iframe></p>
<p><span>BubbleRob 模擬操作</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/pR7ZQXNI9gY" width="560"></iframe></span></p>
<p>40623122</p>
<p>客製可攜系統<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/e5D5stE0QYE" width="560"></iframe>BubbleRob 模擬操作<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/DWnkfwyeQlM" width="560"></iframe></p>
<p>簡化網格</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/r3hM1oJVbgw" width="560"></iframe></p>
<p>40623108 vrep模擬</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1fQk-PCkMRA" width="560"></iframe></p>
<p>40623140-Vrep模擬</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/er2wzNVpdNY" width="560"></iframe></p>
<p>40623129_Vrep模擬</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/iWXadCWerbA" width="560"></iframe></p>
<p>40623116-Vrep</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/4A2ZBJflWok" width="560"></iframe> </p>
<p><span>406231101-Vrep模擬</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/b4NTBfOlPCg" width="560"></iframe></span></p>
<p><span>40623117-Vrep模擬</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/YB0cCIY2HFs" width="560"></iframe></p>
<h1>個人期中影片</h1>
<p>40623116</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/EgPjHd9Xbj8" width="560"></iframe></p>
<p>40623119</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/xw0BQm-JYW8" width="560"></iframe></p>
<p>40623101</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1muNeVxRSCA" width="560"></iframe></p>
<p>40623117</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/bFR1J_vCTIk" width="560"></iframe></p><h1>git 手冊</h1>
=======
<p>40623108</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/zXTaVidEseM" width="560"></iframe></p>
<p>40623122</p>
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/xg-yQ9kmCJg" width="560"></iframe></p><h1>git 手冊</h1>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; c09669c29e2afd5b76bdb1c11de0eba0d9dc6ec9</p>
=======
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/xg-yQ9kmCJg" width="560"></iframe></p>
<p>40623140</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/OPCqtWoW_s4" width="560"></iframe></p>
<p>40623129</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ieCXEfMXd40" width="560"></iframe></p><h1>git 手冊</h1>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; e30fcf1ce080fc7611c5ce985b8da77d6faf2f84
<p>幾乎每一種版本控制系統（Version Control System，以下簡稱 VCS）都支援某種形式的分支（branch）功能， 使用分支意味著你可以從開發主線上分離開來，然後在不影響主線的情況下繼續工作。<br/>有人把 Git 的分支模型視為它的「殺手級功能」， 它有何特別之處呢？新建分支的操作幾乎可以在瞬間完成，並且一般來說切換不同分支也很快； 跟其它的 VCS 不一樣的地方是 Git 鼓勵在工作流程中頻繁地使用分支與合併（merge），即使一天之內進行許多次都沒問題。</p>
<p><span>git branch </span>:建立一個新的分支這會在目前提交上新建一個指標，它並不會切換到這個分支。</p>
<p><span>git checkout + 分支名稱</span>:切換到一個已經存在的分支。</p>
<p>*切換分支會修改工作目錄裡的檔案<br/>當你在 Git 中切換分支時，工作目錄內的檔案將會被修改； 如果切換到舊分支，你的工作目錄會回復到看起來就像當初你最後一次在這個分支提交時的樣子。 如果 Git 無法很乾淨地切換過去，它就不會讓你切換過去。</p>
<p><span>git merge </span>:緊急修正分支進行合併。</p>
<p>git add .</p>
<p>git commit -m "檔案名"</p>
<p>git push</p>
<p>mkdir 名稱 ：創建資料夾</p>
<p><span style="color: #ff0000;">github版本回推</span></p>
<p>1.git  reflog</p>
<p>2.git reset  --hard 版本名稱(下圖)</p>
<p><img alt="" height="648" src="/images/5465.png" width="1152"/></p>
<p>3.git  push  -f  </p>
<p></p>
<p>.</p><h2>伺服器上的Git</h2>
<div><span>Git可以使用四種主要協議來傳輸數據：</span></div>
<div><span>Local protocols、HTTP、Secure Shell（SSH）和Git。</span></div>
<p>通過上方多種方式啟動並運行遠程Git存儲庫，以便您可以與其他人協作或共享您的工作。</p>
<p>運行自己的服務器可以為您提供很多控制，並允許您在自己的防火牆內運行服務器，但是這樣的服務器通常需要相當多的時間來設置和維護。</p>
<h3>通訊協定種類</h3>
<div><strong>Local protocols</strong><br/><span></span></div>
<p><span>優點:</span></p>
<p><span>1.可以直接將存儲庫副本粘貼到每個人都具有共享存取權限的位置，並像設置任何其他共享目錄一樣設置讀/寫權限。</span></p>
<p><span>2.運用這些指令(git pull /home/john/project等)</span><span>，通常會更簡單地使他們推送到遠端，並且您也方便拉取。<br/><br/>缺點:</span></p>
<p><span>1.共享存取通常更難以從多個位置進行設置和存取。</span></p>
<p><span>2.若在家使用筆電的話，需額外安裝遠端系統，否則會相對於基本網路存取還要來得困難與慢上許多。</span></p>
<p><span>3.每個用戶都具有對“遠程”目錄的完全要訪問權限，並且沒有任何東西阻止他們更改或刪除內部Git文件並破壞存儲庫。</span></p>
<p><strong>SSH通訊協定(<span>Secure Shell</span>)</strong></p>
<p>優點:</p>
<p>1.SSH相對容易設置，且它的守護程序很常見。</p>
<p>2.透過SSH存取是安全的，所有數據傳輸都經過加密和身份驗證。</p>
<p>3.像HTTP/S、Git與Local protocols一樣，使數據在傳輸之前盡可能緊湊。</p>
<p>缺點:</p>
<p>1.無法通過它對存儲庫進行匿名存取。</p>
<p>2.如果想允許匿名存取項目並且還想使用SSH，則必須設置SSH以便推送，但其他內容可供其他人獲取。</p>
<p><strong>Git協定</strong></p>
<p>優點:</p>
<p>1.為最快的網絡傳輸協議。</p>
<p>2.若為公共項目提供大量流量或為不需要用戶身份驗證進行讀取的大型項，則可能需要設置Git守護程序。</p>
<p>3.Git存儲庫可供所有人克隆。</p>
<p>缺點:</p>
<p>1.缺乏身份驗證。</p>
<p>2.通常為唯一存取權限(即推送、寫入等)，若開啟推送存取權限，則網路上能到找到項目的URL並任何人可推送到項目裡。</p>
<p><strong>HTTP</strong></p>
<p>可分為兩種，分別為新制(智能)與舊制。</p>
<p>新制(智能):</p>
<p>與SSH或Git協定的運行方式非常相似，它可以設置為像git://協議一樣匿名服務，也可以通過SSH協議等身份驗證和加密來推送。</p>
<p>舊制:</p>
<p>直接將Git存儲庫提供為來自Web服務器的普通文件，優點在於設置它的簡單性。此外，任何可以訪問放置存儲庫的Web服務器的人都可以存取您的存儲庫。</p>
<p>以下優缺點於新制(智能)HTTP</p>
<p>優點:</p>
<p>1.能夠使用用戶名和密碼進行身份驗證。</p>
<p>2.通過HTTPS以只讀方式提供存儲庫。</p>
<p>缺點:</p>
<p>與某些服務器上的SSH相比，在HTTP/S上使用Git可能會有點棘手。</p>
<h3>在伺服器上佈署Git</h3>
<p>要clone存儲庫以創建新的存儲庫，請使用該--bare選項運行clone命令。將存儲庫目錄結束.git。如下:</p>
<p>$ git clone --bare my_project my_project.git</p>
<p>現在應該在目錄中擁有Git目錄數據的副本my_project.git。</p>
<p>下面指令相當於類似的東西，但配置文件中存在一些細微差別。</p>
<p>$ cp -Rf my_project/.git my_project.git</p>
<p>將存儲庫複製到以下來設置新存儲庫：</p>
<p>假設/srv/git存在於該服務器上，並且已經設置了一個名為git.example.com的SSH服務器，而希望將所有Git存儲庫存儲在該/srv/git目錄下。</p>
<p>$ scp -r my_project.git user@git.example.com:/srv/git</p>
<p>之後，對於有這目錄及SSH的權限的用戶就可以來clone，也有推送訪問權限。</p>
<p>$ git clone user@git.example.com:/srv/git/my_project.git</p>
<p>如果git init使用該--shared選項運行命令，Git將自動將組寫入權限正確添加到存儲庫。</p>
<p>$ ssh user@git.example.com<br/>$ cd /srv/git/my_project.git<br/>$ git init --bare --shared</p>
<h3>產生個人的SSH公鑰</h3>
<p>在該目錄並列出內容來輕鬆檢查是否已有密鑰。<br/>輸入指令後有出現文件為id_dsa(id_rsa)為自己私人的密鑰，而文件後方多了.pub則為公鑰。如下:<br/><strong>~/.ssh為目錄</strong></p>
<p>$ cd ~/.ssh</p>
<p>$ ls</p>
<p>authorized_keys2</p>
<p>id_dsa</p>
<p>known_hosts</p>
<p>config</p>
<p>id_dsa.pub</p>
<p>如沒有密鑰時，可輸入下列指令來創建。</p>
<p>$ ssh-keygen</p>
<p>之後，會需要確保密鑰（.ssh/id_rsa）的位置，需輸入兩次密碼，不需要則可空白。</p>
<p>如用戶需要複製有公鑰文件的內容，輸入下列指令。<br/><strong>~/.ssh/id_rsa為公鑰位置</strong></p>
<p>$ cat ~/.ssh/id_rsa.pub</p>
<h3>伺服器的設定</h3>
<p>如要設置SSH存取的服務端，則需使用下列方式來進行身分驗證。</p>
<p>**git為用戶名、 .ssh為目錄、authorized_keys為驗證**</p>
<p>$ sudo adduser git</p>
<p>$ su git</p>
<p>$ cd</p>
<p>$ mkdir .ssh &amp;&amp; chmod 700 .ssh</p>
<p>$ touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys</p>
<p>如需要為該用戶的文件添加一些開發人員的SSH公鑰，並將其保存到臨時文件中。如下:</p>
<p>**john為開發人員的SSH公鑰**</p>
<p>$ cat /tmp/id_rsa.john.pub</p>
<p>在一個沒有工作目錄的情況下設置一個空儲存庫。</p>
<p>$ cd /opt/git</p>
<p>$ mkdir project.git</p>
<p>$ cd project.git</p>
<p>$ git init --bare</p>
<p>將文件推送至遠端儲存庫。</p>
<p><strong>myproject為文件</strong></p>
<h3>Git常駐程式</h3>
<p>如不想將大量的項目或人員都添加SSH密鑰時，以守護進程的方式運行下列指令:<br/>此方法雖然設置方便而快速，但因沒有密鑰的身分驗證，所以任何人都可以存取裡面的內容。多用於世界性的公開項目。</p>
<p>$ git daemon --reuseaddr --base-path=/opt/git/ /opt/git/</p>
<p><strong>--reuseaddr是允許服務器重新啟動而無需等待舊連接超時</strong></p>
<p><strong>--base-path是允許人們克隆項目而不指定整個路徑</strong></p>
<p>**最後的路徑需告訴Git守護程序在哪裡查找要導出的存儲庫**</p>
<p>如果你正在運行防火牆，你還需要在你正在設置它的盒子上的端口9418處打一個洞。<br/>但建議將此守護程序作為具有存儲庫的唯讀權限的用戶運行。</p>
<p>在Ubuntu計算機上，您可以使用Upstart的腳本，並在文件中放入腳本。</p>
<p>**文件為/etc/init/local-git-daemon.conf**</p>
<p>腳本:</p>
<p>start on startup</p>
<p>stop on shutdown</p>
<p>exec /usr/bin/git daemon \</p>
<p>--user=git --group=git \</p>
<p>--reuseaddr \</p>
<p>--base-path=/opt/git/ \</p>
<p>/opt/git/</p>
<p>respawn</p>
<p>要在不重新啟動的情況下運行計算機時</p>
<p>$ initctl start local-git-daemon</p>
<p>允許未經身份驗證的用戶存取指定的儲存庫。</p>
<p>$ cd /path/to/project.git</p>
<p>$ touch git-daemon-export-ok</p>
<h2>分散式的Git</h2>
<h3>分散式工作流程</h3>
<p>分散式工作流程分為三種</p>
<p>集中式工作流程、整合式管理員工作流程、企業型工作流程</p>
<p>集中式工作流程</p>
<p>如前者有人推送，後者必須合併前者的版本，不然會無法推送至儲存庫，是因為避免前者的資料被覆蓋。</p>
<p>整合式管理員工作流程</p>
<p>項目維護者=A、開發人員=B</p>
<p>A推送到他們的公共儲存庫。</p>
<p>B克隆該存儲庫並進行更改，並推動他們自己的公共副本。</p>
<p>B向A發送一封電子郵件，要求A提取更改。</p>
<p>A將B的repo添加為遠程，合併原先的資料，推送到主儲存庫。</p>
<p>企業型工作流程</p>
<p>老闆=A、副手=B、開發人員=C</p>
<p>正常的C會在他們主題的分支上工作，並在重新定義他們在master上的工作。而master分支是獨裁者的分支。</p>
<p>B將C的主題分支合併到B的master分支中。</p>
<p>A將B的master分支合併到A的master分支中。</p>
<p>A將他們推master送到參考存儲庫，以便其他C可以對其進行重新定義。</p>
<p></p>
<p></p>